#!/usr/bin/env python
# coding=utf-8
class 账号类(object):
    def 伪支付费用()：
        return 国家 日期


class 日期生产员(账号类)：
    def 日期生产员工作():
        登陆状态=post 登录#给服务器发信息 返回成功或者失败
        if 登陆状态==成功:
            开一条线程 运行self.work
        else：
            记录登陆失败（self.id,time.(),self.type)

    def work(self):
        日期生产元刷新数据间隔 = global 日期生产元刷新数据间隔
        while True:
            国家，日期=self.伪支付费用()
            nb，list1=判断信息是否有用(国家，日期)
            if nb=有:
                提取list1里的账号类型
                开线程 运行 安排时分生产元进行查询（list1，日期，时间）
            sleep(日期生产元刷新数据间隔)
class 时分生产员(账号类)：

def 安排时分生产元进行查询
def 读取电脑配置文件():
    #从数据库中读取系统配置
    return 重新login间隔，大使馆网站timeout时间，日期生产员刷新数据间隔

def 读取订单信息,循环返回一个订单防止重复():
    return 账号ID，初始预约状态，初始预约城市cd，
            初始预约日期，订单说明，最终预约状态，
            最终预约城市cd，最终预约日期，最终预约时分，
            是否允许做时分生产员，创建时间，更新时间

def 启动日期生产员():
    循环 in 账号生产员库
        使用id查询账号密码
        为每一个日期生产员开启一个线程（内容为：日期生产元工作）

def 记录登陆失败(id,time,账号类型)
    将登陆失败信息记录到数据库
def 判断信息是否有用(国家，日期):
    list1=[]
    进入数据库查看有没有需要该条信息的订单 并且将订单记录到list1
    return 有/没有 list1
if name=='__main__':
    重新login时间,timeout时间,日期生产元刷新数据间隔 = 读取电脑配置文件()
    启动日期生产员（）
