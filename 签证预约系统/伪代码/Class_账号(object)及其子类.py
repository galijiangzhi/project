;class 账号类(object):
    def __init__(self):
        self.用户名
        self.密码
        self.账号类型 #  国家 签证类型 是否TCN 是否资料退回 人数
        self.签证费缴纳状态
        
    def login(self):
        网站login
        main页面检查
        #移动到爬数据页面
        #self.最后使用时间 = now

class 日期生产员(账号类):
    # 注意:下面这一段（爬到日期数据后 → 消费者完成预约）
    #   对实时性的要求极高。能节省0.1秒就节省0.1秒
    def 爬日期数据(self):
        数据库.增加一个待更新内容.更新日期生产员最后使用时间()
        在网站上爬取数据
        数据库.增加一个待更新内容.插入日期生产历史信息()
    def 判断数据是否有效（self）：
        将数据和需求进行对比 如果有效则开线程唤起一个时分生产员
    
class 时分生产员(账号类):
    def 取得可约的时间(self, 城市,最早日期):
        数据库.增加一个待更新内容.更新时分生产员最后使用时间()
        self.爬取网站的时分(城市,最早日期)
        数据库.增加一个待更新内容.插入时分生产历史信息()
    def 判断数据是否有效(self)：
        有效则唤起下单程序
class 用户(账号类):
    def 下单(self):
        使用post请求下单